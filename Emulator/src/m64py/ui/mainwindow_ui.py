# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'src/m64py/ui/mainwindow.ui'
#
# Created: Thu Dec  7 18:09:21 2017
#      by: PyQt5 UI code generator 5.3.2
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(320, 289)
        MainWindow.setMinimumSize(QtCore.QSize(0, 0))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/images/logo.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        self.centralWidget = QtWidgets.QWidget(MainWindow)
        self.centralWidget.setAutoFillBackground(False)
        self.centralWidget.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.centralWidget.setObjectName("centralWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralWidget)
        self.verticalLayout.setSpacing(0)
        self.verticalLayout.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        MainWindow.setCentralWidget(self.centralWidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 320, 24))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuLoad = QtWidgets.QMenu(self.menuFile)
        self.menuLoad.setObjectName("menuLoad")
        self.menuRecent = QtWidgets.QMenu(self.menuFile)
        self.menuRecent.setObjectName("menuRecent")
        self.menuStateSlot = QtWidgets.QMenu(self.menuFile)
        self.menuStateSlot.setObjectName("menuStateSlot")
        self.menuSettings = QtWidgets.QMenu(self.menubar)
        self.menuSettings.setObjectName("menuSettings")
        self.menuHelp = QtWidgets.QMenu(self.menubar)
        self.menuHelp.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.menuHelp.setSeparatorsCollapsible(False)
        self.menuHelp.setObjectName("menuHelp")
        self.menuEmulation = QtWidgets.QMenu(self.menubar)
        self.menuEmulation.setObjectName("menuEmulation")
        self.menuView = QtWidgets.QMenu(self.menubar)
        self.menuView.setObjectName("menuView")
        self.menuWindowSize = QtWidgets.QMenu(self.menuView)
        self.menuWindowSize.setObjectName("menuWindowSize")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setStyleSheet("QStatusBar::item { border: 0px solid; }\n"
"QStatusBar { margin:0px; }")
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionManually = QtWidgets.QAction(MainWindow)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/icons/action_open_manually.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionManually.setIcon(icon1)
        self.actionManually.setObjectName("actionManually")
        self.actionFromList = QtWidgets.QAction(MainWindow)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/icons/action_open_from_list.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionFromList.setIcon(icon2)
        self.actionFromList.setObjectName("actionFromList")
        self.actionKeyboard = QtWidgets.QAction(MainWindow)
        self.actionKeyboard.setObjectName("actionKeyboard")
        self.actionAbout = QtWidgets.QAction(MainWindow)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/icons/action_about.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionAbout.setIcon(icon3)
        self.actionAbout.setObjectName("actionAbout")
        self.actionClearHistory = QtWidgets.QAction(MainWindow)
        self.actionClearHistory.setEnabled(False)
        self.actionClearHistory.setObjectName("actionClearHistory")
        self.actionPaths = QtWidgets.QAction(MainWindow)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/icons/action_paths.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionPaths.setIcon(icon4)
        self.actionPaths.setObjectName("actionPaths")
        self.actionGraphic = QtWidgets.QAction(MainWindow)
        self.actionGraphic.setObjectName("actionGraphic")
        self.actionEmulator = QtWidgets.QAction(MainWindow)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/icons/action_emulator.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionEmulator.setIcon(icon5)
        self.actionEmulator.setObjectName("actionEmulator")
        self.actionPlugins = QtWidgets.QAction(MainWindow)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/icons/action_plugins.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionPlugins.setIcon(icon6)
        self.actionPlugins.setObjectName("actionPlugins")
        self.actionLicense = QtWidgets.QAction(MainWindow)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(":/icons/action_license.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionLicense.setIcon(icon7)
        self.actionLicense.setObjectName("actionLicense")
        self.actionLoadState = QtWidgets.QAction(MainWindow)
        self.actionLoadState.setEnabled(False)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap(":/icons/action_state_load.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionLoadState.setIcon(icon8)
        self.actionLoadState.setObjectName("actionLoadState")
        self.actionSaveState = QtWidgets.QAction(MainWindow)
        self.actionSaveState.setEnabled(False)
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap(":/icons/action_state_save.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSaveState.setIcon(icon9)
        self.actionSaveState.setObjectName("actionSaveState")
        self.slot0 = QtWidgets.QAction(MainWindow)
        self.slot0.setCheckable(True)
        self.slot0.setChecked(True)
        self.slot0.setText("0")
        self.slot0.setObjectName("slot0")
        self.slot1 = QtWidgets.QAction(MainWindow)
        self.slot1.setCheckable(True)
        self.slot1.setText("1")
        self.slot1.setObjectName("slot1")
        self.slot2 = QtWidgets.QAction(MainWindow)
        self.slot2.setCheckable(True)
        self.slot2.setText("2")
        self.slot2.setObjectName("slot2")
        self.slot3 = QtWidgets.QAction(MainWindow)
        self.slot3.setCheckable(True)
        self.slot3.setText("3")
        self.slot3.setObjectName("slot3")
        self.slot4 = QtWidgets.QAction(MainWindow)
        self.slot4.setCheckable(True)
        self.slot4.setText("4")
        self.slot4.setObjectName("slot4")
        self.slot5 = QtWidgets.QAction(MainWindow)
        self.slot5.setCheckable(True)
        self.slot5.setText("5")
        self.slot5.setObjectName("slot5")
        self.slot6 = QtWidgets.QAction(MainWindow)
        self.slot6.setCheckable(True)
        self.slot6.setText("6")
        self.slot6.setObjectName("slot6")
        self.slot7 = QtWidgets.QAction(MainWindow)
        self.slot7.setCheckable(True)
        self.slot7.setText("7")
        self.slot7.setObjectName("slot7")
        self.slot8 = QtWidgets.QAction(MainWindow)
        self.slot8.setCheckable(True)
        self.slot8.setText("8")
        self.slot8.setObjectName("slot8")
        self.slot9 = QtWidgets.QAction(MainWindow)
        self.slot9.setCheckable(True)
        self.slot9.setText("9")
        self.slot9.setObjectName("slot9")
        self.actionQuit = QtWidgets.QAction(MainWindow)
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap(":/icons/action_quit.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionQuit.setIcon(icon10)
        self.actionQuit.setObjectName("actionQuit")
        self.actionSaveScreenshot = QtWidgets.QAction(MainWindow)
        self.actionSaveScreenshot.setEnabled(False)
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap(":/icons/action_screenshot.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSaveScreenshot.setIcon(icon11)
        self.actionSaveScreenshot.setObjectName("actionSaveScreenshot")
        self.actionResume = QtWidgets.QAction(MainWindow)
        self.actionResume.setEnabled(False)
        self.actionResume.setObjectName("actionResume")
        self.actionPause = QtWidgets.QAction(MainWindow)
        self.actionPause.setCheckable(True)
        self.actionPause.setEnabled(False)
        self.actionPause.setObjectName("actionPause")
        self.actionStop = QtWidgets.QAction(MainWindow)
        self.actionStop.setEnabled(False)
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap(":/icons/action_stop.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionStop.setIcon(icon12)
        self.actionStop.setObjectName("actionStop")
        self.actionShowROMInfo = QtWidgets.QAction(MainWindow)
        self.actionShowROMInfo.setEnabled(False)
        icon13 = QtGui.QIcon()
        icon13.addPixmap(QtGui.QPixmap(":/icons/action_rom_info.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionShowROMInfo.setIcon(icon13)
        self.actionShowROMInfo.setObjectName("actionShowROMInfo")
        self.action1X = QtWidgets.QAction(MainWindow)
        self.action1X.setCheckable(True)
        self.action1X.setChecked(False)
        self.action1X.setObjectName("action1X")
        self.action2X = QtWidgets.QAction(MainWindow)
        self.action2X.setCheckable(True)
        self.action2X.setObjectName("action2X")
        self.action960x720 = QtWidgets.QAction(MainWindow)
        self.action960x720.setCheckable(True)
        self.action960x720.setObjectName("action960x720")
        self.actionFullscreen = QtWidgets.QAction(MainWindow)
        self.actionFullscreen.setCheckable(False)
        self.actionFullscreen.setEnabled(False)
        icon14 = QtGui.QIcon()
        icon14.addPixmap(QtGui.QPixmap(":/icons/action_fullscreen.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionFullscreen.setIcon(icon14)
        self.actionFullscreen.setObjectName("actionFullscreen")
        self.actionStatusBar = QtWidgets.QAction(MainWindow)
        self.actionStatusBar.setCheckable(True)
        self.actionStatusBar.setChecked(True)
        self.actionStatusBar.setVisible(True)
        self.actionStatusBar.setObjectName("actionStatusBar")
        self.actionPythonConsole = QtWidgets.QAction(MainWindow)
        self.actionPythonConsole.setCheckable(False)
        self.actionPythonConsole.setEnabled(True)
        self.actionPythonConsole.setObjectName("actionPythonConsole")
        self.actionStatusBar1 = QtWidgets.QAction(MainWindow)
        self.actionStatusBar1.setCheckable(True)
        self.actionStatusBar1.setChecked(True)
        self.actionStatusBar1.setVisible(True)
        self.actionStatusBar1.setObjectName("actionStatusBar1")
        self.actionReset = QtWidgets.QAction(MainWindow)
        self.actionReset.setEnabled(False)
        icon15 = QtGui.QIcon()
        icon15.addPixmap(QtGui.QPixmap(":/icons/action_reset.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionReset.setIcon(icon15)
        self.actionReset.setObjectName("actionReset")
        self.actionMute = QtWidgets.QAction(MainWindow)
        self.actionMute.setCheckable(True)
        self.actionMute.setEnabled(False)
        self.actionMute.setObjectName("actionMute")
        self.actionSlowDown = QtWidgets.QAction(MainWindow)
        self.actionSlowDown.setEnabled(False)
        icon16 = QtGui.QIcon()
        icon16.addPixmap(QtGui.QPixmap(":/icons/action_speed_down.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSlowDown.setIcon(icon16)
        self.actionSlowDown.setObjectName("actionSlowDown")
        self.actionSpeedUp = QtWidgets.QAction(MainWindow)
        self.actionSpeedUp.setEnabled(False)
        icon17 = QtGui.QIcon()
        icon17.addPixmap(QtGui.QPixmap(":/icons/action_speed_up.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSpeedUp.setIcon(icon17)
        self.actionSpeedUp.setObjectName("actionSpeedUp")
        self.action3X = QtWidgets.QAction(MainWindow)
        self.action3X.setCheckable(True)
        self.action3X.setObjectName("action3X")
        self.actionCheats = QtWidgets.QAction(MainWindow)
        self.actionCheats.setEnabled(False)
        icon18 = QtGui.QIcon()
        icon18.addPixmap(QtGui.QPixmap(":/icons/action_cheats.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCheats.setIcon(icon18)
        self.actionCheats.setObjectName("actionCheats")
        self.actionCustom = QtWidgets.QAction(MainWindow)
        self.actionCustom.setObjectName("actionCustom")
        self.actionLoadFrom = QtWidgets.QAction(MainWindow)
        self.actionLoadFrom.setEnabled(False)
        self.actionLoadFrom.setIcon(icon8)
        self.actionLoadFrom.setObjectName("actionLoadFrom")
        self.actionSaveAs = QtWidgets.QAction(MainWindow)
        self.actionSaveAs.setEnabled(False)
        self.actionSaveAs.setIcon(icon9)
        self.actionSaveAs.setObjectName("actionSaveAs")
        self.actionLimitFPS = QtWidgets.QAction(MainWindow)
        self.actionLimitFPS.setCheckable(True)
        self.actionLimitFPS.setChecked(True)
        self.actionLimitFPS.setEnabled(False)
        self.actionLimitFPS.setObjectName("actionLimitFPS")
        self.actionSoftReset = QtWidgets.QAction(MainWindow)
        self.actionSoftReset.setEnabled(False)
        self.actionSoftReset.setIcon(icon15)
        self.actionSoftReset.setObjectName("actionSoftReset")
        self.actionGraphics = QtWidgets.QAction(MainWindow)
        icon19 = QtGui.QIcon()
        icon19.addPixmap(QtGui.QPixmap(":/icons/action_graphics.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionGraphics.setIcon(icon19)
        self.actionGraphics.setObjectName("actionGraphics")
        self.actionLog = QtWidgets.QAction(MainWindow)
        icon20 = QtGui.QIcon()
        icon20.addPixmap(QtGui.QPixmap(":/icons/action_log_viewer.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionLog.setIcon(icon20)
        self.actionLog.setObjectName("actionLog")
        self.menuLoad.addAction(self.actionManually)
        self.menuLoad.addAction(self.actionFromList)
        self.menuFile.addAction(self.menuLoad.menuAction())
        self.menuFile.addAction(self.menuRecent.menuAction())
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionLoadState)
        self.menuFile.addAction(self.actionSaveState)
        self.menuFile.addAction(self.menuStateSlot.menuAction())
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionLoadFrom)
        self.menuFile.addAction(self.actionSaveAs)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionSaveScreenshot)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionShowROMInfo)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionQuit)
        self.menuSettings.addAction(self.actionPaths)
        self.menuSettings.addAction(self.actionEmulator)
        self.menuSettings.addAction(self.actionGraphics)
        self.menuSettings.addAction(self.actionPlugins)
        self.menuHelp.addAction(self.actionAbout)
        self.menuHelp.addAction(self.actionLicense)
        self.menuHelp.addAction(self.actionLog)
        self.menuEmulation.addAction(self.actionPause)
        self.menuEmulation.addAction(self.actionMute)
        self.menuEmulation.addSeparator()
        self.menuEmulation.addAction(self.actionStop)
        self.menuEmulation.addAction(self.actionReset)
        self.menuEmulation.addAction(self.actionSoftReset)
        self.menuEmulation.addSeparator()
        self.menuEmulation.addAction(self.actionLimitFPS)
        self.menuEmulation.addSeparator()
        self.menuEmulation.addAction(self.actionSlowDown)
        self.menuEmulation.addAction(self.actionSpeedUp)
        self.menuEmulation.addSeparator()
        self.menuEmulation.addAction(self.actionCheats)
        self.menuWindowSize.addAction(self.action1X)
        self.menuWindowSize.addAction(self.action2X)
        self.menuWindowSize.addAction(self.action3X)
        self.menuView.addAction(self.menuWindowSize.menuAction())
        self.menuView.addAction(self.actionFullscreen)
        self.menuView.addSeparator()
        self.menuView.addAction(self.actionPythonConsole)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuEmulation.menuAction())
        self.menubar.addAction(self.menuView.menuAction())
        self.menubar.addAction(self.menuSettings.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())

        self.retranslateUi(MainWindow)
        self.actionQuit.triggered.connect(MainWindow.close)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "M64Py"))
        self.menuFile.setTitle(_translate("MainWindow", "&File"))
        self.menuLoad.setTitle(_translate("MainWindow", "&Open ROM"))
        self.menuRecent.setTitle(_translate("MainWindow", "Open &Recent"))
        self.menuStateSlot.setTitle(_translate("MainWindow", "Change State Slot"))
        self.menuSettings.setTitle(_translate("MainWindow", "&Settings"))
        self.menuHelp.setTitle(_translate("MainWindow", "&Help"))
        self.menuEmulation.setTitle(_translate("MainWindow", "&Emulation"))
        self.menuView.setTitle(_translate("MainWindow", "&View"))
        self.menuWindowSize.setTitle(_translate("MainWindow", "Window Size"))
        self.actionManually.setText(_translate("MainWindow", "&Manually..."))
        self.actionFromList.setText(_translate("MainWindow", "From &List..."))
        self.actionKeyboard.setText(_translate("MainWindow", "&Keyboard"))
        self.actionAbout.setText(_translate("MainWindow", "&About"))
        self.actionClearHistory.setText(_translate("MainWindow", "&Clear history"))
        self.actionPaths.setText(_translate("MainWindow", "Paths"))
        self.actionGraphic.setText(_translate("MainWindow", "Graphics"))
        self.actionEmulator.setText(_translate("MainWindow", "Emulator"))
        self.actionPlugins.setText(_translate("MainWindow", "Plugins"))
        self.actionLicense.setText(_translate("MainWindow", "License"))
        self.actionLoadState.setText(_translate("MainWindow", "Load State"))
        self.actionLoadState.setShortcut(_translate("MainWindow", "F7"))
        self.actionSaveState.setText(_translate("MainWindow", "Save State"))
        self.actionSaveState.setShortcut(_translate("MainWindow", "F5"))
        self.actionQuit.setText(_translate("MainWindow", "&Quit"))
        self.actionSaveScreenshot.setText(_translate("MainWindow", "&Save Screenshot"))
        self.actionSaveScreenshot.setShortcut(_translate("MainWindow", "F12"))
        self.actionResume.setText(_translate("MainWindow", "&Resume"))
        self.actionPause.setText(_translate("MainWindow", "&Pause"))
        self.actionPause.setShortcut(_translate("MainWindow", "P"))
        self.actionStop.setText(_translate("MainWindow", "&Stop"))
        self.actionStop.setShortcut(_translate("MainWindow", "Esc"))
        self.actionShowROMInfo.setText(_translate("MainWindow", "Show ROM Info..."))
        self.action960x720.setText(_translate("MainWindow", "960x720"))
        self.actionFullscreen.setText(_translate("MainWindow", "Fullscreen"))
        self.actionFullscreen.setShortcut(_translate("MainWindow", "Alt+Return"))
        self.actionStatusBar.setText(_translate("MainWindow", "Status Bar"))
        self.actionPythonConsole.setText(_translate("MainWindow", "Python Console"))
        self.actionPythonConsole.setShortcut(_translate("MainWindow", "Alt+`"))
        self.actionStatusBar1.setText(_translate("MainWindow", "Status Bar"))
        self.actionReset.setText(_translate("MainWindow", "&Reset"))
        self.actionReset.setShortcut(_translate("MainWindow", "F9"))
        self.actionMute.setText(_translate("MainWindow", "&Mute"))
        self.actionMute.setShortcut(_translate("MainWindow", "M"))
        self.actionSlowDown.setText(_translate("MainWindow", "Slow Down"))
        self.actionSlowDown.setShortcut(_translate("MainWindow", "F10"))
        self.actionSpeedUp.setText(_translate("MainWindow", "Speed Up"))
        self.actionSpeedUp.setShortcut(_translate("MainWindow", "F11"))
        self.actionCheats.setText(_translate("MainWindow", "Cheats..."))
        self.actionCheats.setShortcut(_translate("MainWindow", "F2"))
        self.actionLoadFrom.setText(_translate("MainWindow", "Load State..."))
        self.actionSaveAs.setText(_translate("MainWindow", "Save State As..."))
        self.actionLimitFPS.setText(_translate("MainWindow", "Limit FPS"))
        self.actionSoftReset.setText(_translate("MainWindow", "Sof&t Reset"))
        self.actionSoftReset.setShortcut(_translate("MainWindow", "F8"))
        self.actionGraphics.setText(_translate("MainWindow", "Graphics"))
        self.actionLog.setText(_translate("MainWindow", "&Log Viewer"))

from . import images_rc
from . import icons_rc
